    
    ## One Dev Machine on Ubuntu
       
    apt install net-tools terminator git make npm golang-go go-bindata docker docker-compose curl
    apt install make npm 
      
    snap install pycharm-community --classic
    snap install code --classic

    # Yarn
    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
    sudo apt update && sudo apt install yarn
    
    
    # i3
    apt install i3 rofi
    
    # i3 config:  vim .config/i3/config
    bindsym $mod+d exec rofi -show combi -show-icons -theme android_notification
   
   
   
  # bash_rc  

    # User aliases
    alias vime='vim -c Explore'
    alias myip='curl ifconfig.me'
    alias www='python -m http.server 8837'
    
    # User projects
    alias fproj="cd /home/zartch/projects"
    alias _project_="cd /home/zartch/projects/_project_"
    

    # BASH Scripts:

    ------Script para ver la rama en la que te encuentras en terminal:-------

            vim ~/.bashrc

            #Nombre rama git:
            parse_git_branch() {
                 git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
            }
            export PS1="\u@\h \[\e[32m\]\w \[\e[91m\]\$(parse_git_branch)\[\e[00m\]$ "

    ------------------------------------------------------------------------

    ---Script para insertar automáticamente la rama de git en el commit:---

          #MIT License
          #Copyleft (c) 2020 Ramón Roldan

          mkdir -p ~/.git-templates/hooks
          git config --global init.templatedir '~/.git-templates'
          vim ~/.git-templates/hooks/prepare-commit-msg


          # paste:

          #!/bin/sh
          BRANCH_NAME=$(git branch 2>/dev/null | grep -e ^* | tr -d ' *')
          if [ -n "$BRANCH_NAME" ]; then
              echo "$BRANCH_NAME - $(cat $1)" > $1
          fi


          chmod a+x ~/.git-templates/hooks/prepare-commit-msg

          #Activate in repo by:

          git init
          git commit -am "Esto es una prueba" 

    ------------------------------------------------------------------------
